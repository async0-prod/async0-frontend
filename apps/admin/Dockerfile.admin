FROM node:23-alpine AS base

ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"

RUN apk update
RUN apk add --no-cache libc6-compat
RUN corepack enable && corepack prepare pnpm

FROM base AS builder
WORKDIR /app

RUN pnpm install --global turbo
COPY package.json pnpm-lock.yaml turbo.json ./
COPY apps apps
COPY packages packages
RUN turbo prune --scope=admin --docker

FROM base AS installer
WORKDIR /app

COPY --from=builder /app/out/json/ .
RUN pnpm install --frozen-lockfile
COPY --from=builder /app/out/full/ .
# COPY ./packages/db/.env /app/packages/db/.env
RUN pnpm --filter=@async0/db exec prisma generate --sql

RUN pnpm turbo run build --filter=admin

FROM base AS runner
WORKDIR /app

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs
USER nextjs

COPY --from=installer --chown=nextjs:nodejs /app/apps/admin/.next/standalone ./
COPY --from=installer --chown=nextjs:nodejs /app/apps/admin/.next/static ./apps/admin/.next/static
COPY --from=installer --chown=nextjs:nodejs /app/apps/admin/public ./apps/admin/public

CMD ["node", "apps/admin/server.js"]
