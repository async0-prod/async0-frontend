version: "3.8"

services:
  traefik:
    image: traefik:v3.1
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=gourav@async0.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - mode: host
        protocol: tcp
        published: 80
        target: 80
      - mode: host
        protocol: tcp
        published: 443
        target: 443
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock

  user:
    image: grvbrk/async0:user-${GIT_COMMIT_HASH:-latest}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend"
      - "traefik.http.services.user-service.loadbalancer.server.port=3000"
      - "traefik.http.routers.user-router.rule=Host(`async0.com`)"
      - "traefik.http.routers.user-router.entrypoints=websecure"
      - "traefik.http.routers.user-router.tls.certresolver=myresolver"
      - "traefik.http.routers.user-router.service=user-service"
    configs:
      - source: user-config
        target: /app/.env
        mode: 0444
    networks:
      - frontend
      - backend
      - judge0

  admin:
    image: grvbrk/async0:admin-${GIT_COMMIT_HASH:-latest}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend"
      - "traefik.http.services.admin-service.loadbalancer.server.port=3001"
      - "traefik.http.routers.admin-router.rule=Host(`admin.async0.com`)"
      - "traefik.http.routers.admin-router.entrypoints=websecure"
      - "traefik.http.routers.admin-router.tls.certresolver=myresolver"
      - "traefik.http.routers.admin-router.service=admin-service"
    configs:
      - source: admin-config
        target: /app/.env
        mode: 0444
    networks:
      - frontend
      - backend
      - judge0

  pyserver:
    image: grvbrk/async0:python-${GIT_COMMIT_HASH:-latest}
    configs:
      - source: pyserver-config
        target: /app/.env
        mode: 0444
    networks:
      - backend

  judge0-server:
    image: judge0/judge0:latest
    ports:
      - "2358:2358"
    configs:
      - source: judge0-config
        target: /judge0.conf
        mode: 0444
    deploy:
      restart_policy:
        condition: any
    networks:
      - judge0

  worker:
    image: judge0/judge0:latest
    command: ["./scripts/workers"]
    configs:
      - source: judge0-config
        target: /judge0.conf
        mode: 0444
    deploy:
      restart_policy:
        condition: any
    networks:
      - judge0

  db:
    image: postgres:16.2
    env_file: judge0.conf
    volumes:
      - data:/var/lib/postgresql/data/
    deploy:
      restart_policy:
        condition: any
    networks:
      - judge0

  redis:
    image: redis:7.2.4
    command:
      [
        "bash",
        "-c",
        'docker-entrypoint.sh --appendonly no --requirepass "$$REDIS_PASSWORD"',
      ]
    env_file: judge0.conf
    deploy:
      restart_policy:
        condition: any
    networks:
      - judge0

configs:
  user-config:
    external: true
  admin-config:
    external: true
  pyserver-config:
    external: true
  judge0-config:
    external: true

volumes:
  data:
  letsencrypt:

networks:
  frontend:
  backend:
  judge0:
