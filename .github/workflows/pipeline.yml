name: async0 CICD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  user-changed:
    uses: ./.github/workflows/app-changed.yml
    with:
      workspace_name: user
      base_ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || 'HEAD~1' }}

  admin-changed:
    uses: ./.github/workflows/app-changed.yml
    with:
      workspace_name: admin
      base_ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || 'HEAD~1' }}

  # build-user-and-push-image:
  #   # if: needs.setup.outputs.user_changed == 'true'
  #   runs-on: ubuntu-latest
  #   # needs: setup

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Build and push Docker image to dockerhub
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: .
  #         file: ./apps/user/Dockerfile.user
  #         push: ${{ github.event_name != 'pull_request' }}
  #         tags: |
  #           ${{ secrets.DOCKER_USERNAME }}/async0:user-latest
  #           ${{ secrets.DOCKER_USERNAME }}/async0:user-${{ github.sha }}
  #         platforms: linux/amd64,linux/arm64
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max
  #         provenance: false
  #         sbom: true

  # build-admin-and-push-image:
  #   # if: needs.setup.outputs.admin_changed == 'true'
  #   runs-on: ubuntu-latest
  #   # needs: setup

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Build and push Docker image to dockerhub
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: .
  #         file: ./apps/admin/Dockerfile.admin
  #         push: ${{ github.event_name != 'pull_request' }}
  #         tags: |
  #           ${{ secrets.DOCKER_USERNAME }}/async0:admin-latest
  #           ${{ secrets.DOCKER_USERNAME }}/async0:admin-${{ github.sha }}
  #         platforms: linux/amd64,linux/arm64
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max
  #         provenance: false
  #         sbom: true

  # deploy:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 10
  #   needs:
  #     - user-changed
  #     - admin-changed
  #     - build-user-and-push-image
  #     - build-admin-and-push-image
  #   if: |
  #     needs.user-changed.outputs.changed == 'true' ||
  #     needs.admin-changed.outputs.changed == 'true'

  #   steps:
  #     - name: Join Tailscale network
  #       uses: tailscale/github-action@v3
  #       with:
  #         oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
  #         oauth-secret: ${{ secrets.TS_OAUTH_CLIENT_SECRET }}
  #         tags: tag:ci
  #         version: latest
  #         use-cache: "true"

  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Copy docker-stack.yml to server
  #       run: scp -o StrictHostKeyChecking=no docker-stack.yml deploy@nazrein:/home/deploy/

  #     - name: Deploy or update stack
  #       run: |
  #         ssh -o StrictHostKeyChecking=no deploy@nazrein << 'EOF'
  #           set -e
  #           cd /home/deploy
  #           docker stack deploy -c docker-stack.yml nazrein
  #         EOF
